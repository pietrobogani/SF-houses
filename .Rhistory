Eviction_Notices <- Eviction_Notices[Eviction_Notices$year > 2010 & Eviction_Notices$year < 2019,]  #butto via gli anni prima perchè per fare il modello di regr devo usare gli stessi anni di 'rent'
write.csv(Eviction_Notices,"C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/Eviction_Notices_clean.csv")
Eviction_Notices_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/Eviction_Notices_clean.csv", header=TRUE)
View(Eviction_Notices_clean)
eviction_nhood_yearly <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/eviction_nhood_yearly.csv", header=TRUE)
eviction_nhood_monthly <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/eviction_nhood_monthly.csv", header=TRUE)
View(eviction_nhood_yearly)
View(eviction_nhood_monthly)
setwd("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses")
New_construction_clean_geocoded <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/New_construction_clean_geocoded.csv", header=TRUE)
View(New_construction_clean_geocoded)
New_construction_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/New_construction_clean.csv", header=TRUE)
View(New_construction_clean_geocoded)
View(New_construction_clean)
New_construction_clean$street_name <- str_replace_all(New_construction_clean$street_name, c("01"="1", "02"="2", "03"="3","04"="4","05"="5","06"="6","07"="7","08"="8","09"="9"))
my_addresses <- New_construction_clean[,5:8]
New_construction_clean$address <- paste(New_construction_clean$street_number, New_construction_clean$street_number_suffix, New_construction_clean$street_name, New_construction_clean$street_suffix, ", San Francisco, CA, USA")
New_construction_clean$address <- str_replace(New_construction_clean$address, " NA ", " ")[1:4226]
New_construction_clean$address <- str_replace(New_construction_clean$address, " BL ", " BLVD ")
New_construction_clean$address <- str_replace(New_construction_clean$address, " TR ", " TERR ")
New_construction_clean$address <- str_replace(New_construction_clean$address, " PZ ", " Plaza ")
#my_df = New_construction_clean$address
#write.csv(my_df[1:500,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses1.csv", row.names = FALSE)
#write.csv(my_df[501:1000,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses2.csv", row.names = FALSE)
#write.csv(my_df[1001:1500,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses3.csv", row.names = FALSE)
#write.csv(my_df[1501:2000,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses4.csv", row.names = FALSE)
#write.csv(my_df[2001:2500,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses5.csv", row.names = FALSE)
#write.csv(my_df[2501:3000,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses6.csv", row.names = FALSE)
#write.csv(my_df[3001:3500,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses7.csv", row.names = FALSE)
#write.csv(my_df[3501:4000,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses8.csv", row.names = FALSE)
#write.csv(my_df[4001:4226,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses9.csv", row.names = FALSE)
Geocoded <- read_excel("Documents/Polimi/Non Parametric/Geocoded.xlsx")
New_construction_clean <- merge(New_construction_clean,subset(Geocoded, select=c("original_address", "lat", "lon")), by.x="address", by.y="original_address")
library(readxl)
Geocoded <- read_excel("Geocoded.xlsx")
View(Geocoded)
library(stringr)
library(readxl)
New_construction_clean$street_name <- str_replace_all(New_construction_clean$street_name, c("01"="1", "02"="2", "03"="3","04"="4","05"="5","06"="6","07"="7","08"="8","09"="9"))
my_addresses <- New_construction_clean[,5:8]
New_construction_clean$address <- paste(New_construction_clean$street_number, New_construction_clean$street_number_suffix, New_construction_clean$street_name, New_construction_clean$street_suffix, ", San Francisco, CA, USA")
New_construction_clean$address <- str_replace(New_construction_clean$address, " NA ", " ")[1:4226]
New_construction_clean$address <- str_replace(New_construction_clean$address, " BL ", " BLVD ")
New_construction_clean$address <- str_replace(New_construction_clean$address, " TR ", " TERR ")
New_construction_clean$address <- str_replace(New_construction_clean$address, " PZ ", " Plaza ")
#my_df = New_construction_clean$address
#write.csv(my_df[1:500,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses1.csv", row.names = FALSE)
#write.csv(my_df[501:1000,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses2.csv", row.names = FALSE)
#write.csv(my_df[1001:1500,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses3.csv", row.names = FALSE)
#write.csv(my_df[1501:2000,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses4.csv", row.names = FALSE)
#write.csv(my_df[2001:2500,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses5.csv", row.names = FALSE)
#write.csv(my_df[2501:3000,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses6.csv", row.names = FALSE)
#write.csv(my_df[3001:3500,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses7.csv", row.names = FALSE)
#write.csv(my_df[3501:4000,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses8.csv", row.names = FALSE)
#write.csv(my_df[4001:4226,],"/Users/saratonazzi/Documents/Polimi/Non Parametric/addresses9.csv", row.names = FALSE)
Geocoded <- read_excel("Documents/Polimi/Non Parametric/Geocoded.xlsx")
New_construction_clean <- merge(New_construction_clean,subset(Geocoded, select=c("original_address", "lat", "lon")), by.x="address", by.y="original_address")
View(New_construction_clean)
View(New_construction_clean)
rent_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_clean.csv", header=TRUE)
View(rent_clean)
rent <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent.csv", header=TRUE)
View(rent)
View(rent)
rent$d = as.Date(as.character(rent$date),format = "%Y%m%d")
rent <- rent[,-c(1:3,15:17)]
rent <- rent[(rent[,2] == 'san francisco'),] #solo s francisco città
rent <- rent[!(is.na(rent[,7])), ] #rimuovo quelli che non hanno i metri quadri, secondo me sono inutili
rent <- rent[!(is.na(rent[,4])), ] #rimuovo quelli che non hanno il prezzo, secondo me sono inutili
rent <- rent[!duplicated(rent),] #elimino rent duplici (fatti nello stesso giorno, alla stessa cifra, nello stesso indirizzo)
write.csv(rent,"C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_clean.csv")
rent_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_clean.csv", header=TRUE)
for (i in 1:length(rent[,1])) {
temp <- strsplit(rent_clean[i,13], "-")
rent[i,13] <- temp[[1]][1]
rent[i,14] <- temp[[1]][2]
}
length(rent[rent$V13 == '2001',13]) #5
length(rent[rent$V13 == '2002',13]) #6
length(rent[rent$V13 == '2003',13]) #7
length(rent[rent$V13 == '2004',13]) #250
length(rent[rent$V13 == '2005',13]) #28
length(rent[rent$V13 == '2006',13]) #67
length(rent[rent$V13 == '2007',13]) #24
length(rent[rent$V13 == '2008',13]) #8
length(rent[rent$V13 == '2009',13]) #5
length(rent[rent$V13 == '2010',13]) #6
length(rent[rent$V13 == '2011',13]) #1241    #Basandoci su 'rent.csv', gli unici anni in cui studiare sono dal 2011 al 2018
length(rent[rent$V13 == '2012',13]) #2707
length(rent[rent$V13 == '2013',13]) #884
length(rent[rent$V13 == '2014',13]) #623
length(rent[rent$V13 == '2015',13]) #1587
length(rent[rent$V13 == '2016',13]) #2121
length(rent[rent$V13 == '2017',13]) #262
length(rent[rent$V13 == '2018',13]) #354
#I remove them if year < 2011    => Mi servono Construction dal 2007 al 2014   <----TOM : Qua è 2018, non 2014!
rent <- rent[as.double(rent$V13) > 2010 ,]
rent <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent.csv", header=TRUE)
rent$d = as.Date(as.character(rent$date),format = "%Y%m%d")
rent <- rent[,-c(1:3,15:17)]
rent <- rent[(rent[,2] == 'san francisco'),] #solo s francisco città
rent <- rent[!(is.na(rent[,7])), ] #rimuovo quelli che non hanno i metri quadri, secondo me sono inutili
rent <- rent[!(is.na(rent[,4])), ] #rimuovo quelli che non hanno il prezzo, secondo me sono inutili
rent <- rent[!duplicated(rent),] #elimino rent duplici (fatti nello stesso giorno, alla stessa cifra, nello stesso indirizzo)
write.csv(rent,"C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_clean.csv")
rent_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_clean.csv", header=TRUE)
View(rent_clean)
strsplit(rent_clean[i,13]
)
strsplit(rent_clean[1,13]
)
strsplit(rent_clean[1,13], "-")
for (i in 1:length(rent[,1])) {
temp <- strsplit(rent_clean[i,13], "-")
rent[i,13] <- temp[[1]][3]
rent[i,14] <- temp[[1]][2]
rent[i,15] <- temp[[1]][1]
}
length(rent[rent$V13 == '2001',13]) #5
length(rent[rent$V13 == '2002',13]) #6
length(rent[rent$V13 == '2003',13]) #7
length(rent[rent$V13 == '2004',13]) #250
length(rent[rent$V13 == '2005',13]) #28
length(rent[rent$V13 == '2006',13]) #67
length(rent[rent$V13 == '2007',13]) #24
length(rent[rent$V13 == '2008',13]) #8
length(rent[rent$V13 == '2009',13]) #5
length(rent[rent$V13 == '2010',13]) #6
length(rent[rent$V13 == '2011',13]) #1241    #Basandoci su 'rent.csv', gli unici anni in cui studiare sono dal 2011 al 2018
length(rent[rent$V13 == '2012',13]) #2707
length(rent[rent$V13 == '2013',13]) #884
length(rent[rent$V13 == '2014',13]) #623
length(rent[rent$V13 == '2015',13]) #1587
length(rent[rent$V13 == '2016',13]) #2121
length(rent[rent$V13 == '2017',13]) #262
length(rent[rent$V13 == '2018',13]) #354
#I remove them if year < 2011    => Mi servono Construction dal 2007 al 2014   <----TOM : Qua è 2018, non 2014!
rent <- rent[as.double(rent$V13) > 2010 ,]
#Aggiungo rent/mq e rimuovo sq feet e price, beds, rooms, address, data completa, city&county( always == san francisco)
rent[,15]= rent[,4]/rent[,7]
rent <- rent[,-c(2:5,6:9,12)]
colnames(rent) <- c('nhood', 'lat', 'lon', 'year', 'month', 'rent/mq')
write.csv(rent,"C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/rent_clean.csv")
rent_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/rent_clean.csv", header=TRUE)
View(rent_clean)
rent <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent.csv", header=TRUE)
rent$d = as.Date(as.character(rent$date),format = "%Y%m%d")
rent <- rent[,-c(1:3,15:17)]
rent <- rent[(rent[,2] == 'san francisco'),] #solo s francisco città
rent <- rent[!(is.na(rent[,7])), ] #rimuovo quelli che non hanno i metri quadri, secondo me sono inutili
rent <- rent[!(is.na(rent[,4])), ] #rimuovo quelli che non hanno il prezzo, secondo me sono inutili
rent <- rent[!duplicated(rent),] #elimino rent duplici (fatti nello stesso giorno, alla stessa cifra, nello stesso indirizzo)
write.csv(rent,"C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_clean.csv")
rent_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_clean.csv", header=TRUE)
for (i in 1:length(rent[,1])) {
temp <- strsplit(rent_clean[i,13], "-")
rent[i,13] <- temp[[1]][3]
rent[i,14] <- temp[[1]][2]
rent[i,15] <- temp[[1]][1]
}
length(rent[rent$V13 == '2001',13]) #5
length(rent[rent$V13 == '2002',13]) #6
length(rent[rent$V13 == '2003',13]) #7
length(rent[rent$V13 == '2004',13]) #250
length(rent[rent$V13 == '2005',13]) #28
length(rent[rent$V13 == '2006',13]) #67
length(rent[rent$V13 == '2007',13]) #24
length(rent[rent$V13 == '2008',13]) #8
length(rent[rent$V13 == '2009',13]) #5
length(rent[rent$V13 == '2010',13]) #6
length(rent[rent$V13 == '2011',13]) #1241    #Basandoci su 'rent.csv', gli unici anni in cui studiare sono dal 2011 al 2018
length(rent[rent$V13 == '2012',13]) #2707
length(rent[rent$V13 == '2013',13]) #884
length(rent[rent$V13 == '2014',13]) #623
length(rent[rent$V13 == '2015',13]) #1587
length(rent[rent$V13 == '2016',13]) #2121
length(rent[rent$V13 == '2017',13]) #262
length(rent[rent$V13 == '2018',13]) #354
#I remove them if year < 2011    => Mi servono Construction dal 2007 al 2014   <----TOM : Qua è 2018, non 2014!
rent <- rent[as.double(rent$V13) > 2010 ,]
#Aggiungo rent/mq e rimuovo sq feet e price, beds, rooms, address, data completa, city&county( always == san francisco)
rent[,15]= rent[,4]/rent[,7]
rent <- rent[,-c(2:5,6:9,12)]
colnames(rent) <- c('nhood', 'lat', 'lon', 'year', 'month', 'rent/mq')
write.csv(rent,"C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/rent_clean.csv")
rent_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/rent_clean.csv", header=TRUE)
rent <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent.csv", header=TRUE)
rent$d = as.Date(as.character(rent$date),format = "%Y%m%d")
rent <- rent[,-c(1:3,15:17)]
rent <- rent[(rent[,2] == 'san francisco'),] #solo s francisco città
rent <- rent[!(is.na(rent[,7])), ] #rimuovo quelli che non hanno i metri quadri, secondo me sono inutili
rent <- rent[!(is.na(rent[,4])), ] #rimuovo quelli che non hanno il prezzo, secondo me sono inutili
rent <- rent[!duplicated(rent),] #elimino rent duplici (fatti nello stesso giorno, alla stessa cifra, nello stesso indirizzo)
write.csv(rent,"C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_clean.csv")
rent_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_clean.csv", header=TRUE)
for (i in 1:length(rent[,1])) {
temp <- strsplit(rent_clean[i,13], "-")
rent[i,13] <- temp[[1]][3]
rent[i,14] <- temp[[1]][2]
rent[i,15] <- temp[[1]][1]
}
View(rent)
#I remove them if year < 2011    => Mi servono Construction dal 2007 al 2014   <----TOM : Qua è 2018, non 2014!
rent <- rent[as.double(rent$V15) > 2010 ,]
#Aggiungo rent/mq e rimuovo sq feet e price, beds, rooms, address, data completa, city&county( always == san francisco)
rent[,16]= rent[,4]/rent[,7]
rent <- rent[,-c(2:5,6:9,12)]
colnames(rent) <- c('nhood', 'lat', 'lon', 'day','year', 'month', 'rent/sq')
write.csv(rent,"C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/rent_clean.csv")
rent_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/rent_clean.csv", header=TRUE)
#Calcolo i df con avg rent per nhood per anno e per mese
vect_year = paste(rent_clean$year)
vect_month = paste(rent_clean$month)
vect_nhood = paste(rent_clean$nhood)
vect_aus = paste(vect_month,vect_year,vect_nhood)
vect_aus2 = paste(vect_year,vect_nhood)
rent_clean$year_nhood = vect_aus2
rent_clean$month_year_nhood = vect_aus
rm(vect_aus,vect_aus2,vect_year,vect_nhood,vect_month)
length(unique(rent_clean$year_nhood))
rent_nhood_yearly = aggregate(rent_clean$`rent.mq`, by = list(rent_clean$year_nhood), FUN = mean)
names(rent_nhood_yearly)[names(rent_nhood_yearly) == 'Group.1'] <- 'year_nhood'
names(rent_nhood_yearly)[names(rent_nhood_yearly) == 'x'] <- 'avg_rent.mq'
length(unique(rent_clean$month_year_nhood))
rent_nhood_monthly = aggregate(rent_clean$`rent.mq`, by = list(rent_clean$month_year_nhood), FUN = mean)
names(rent_nhood_monthly)[names(rent_nhood_monthly) == 'Group.1'] <- 'nhood_month_year'
names(rent_nhood_monthly)[names(rent_nhood_monthly) == 'x'] <- 'avg_rent.mq'
#Adesso son da splittare di nuovo mese-anno e nhood e si può plottare tutto!
for (i in 1:length(rent_nhood_monthly[,1])) {   #preparo bene le coordinate
temp <- strsplit(rent_nhood_monthly[i,1], " ")
for (j in 1:length(temp[[1]])){
rent_nhood_monthly[i,2+j] <- temp[[1]][j]
}
}
colnames(rent) <- c('nhood', 'lat', 'lon', 'day','year', 'month', 'rent.sq')
write.csv(rent,"C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/rent_clean.csv")
rent_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/rent_clean.csv", header=TRUE)
vect_year = paste(rent_clean$year)
vect_month = paste(rent_clean$month)
vect_nhood = paste(rent_clean$nhood)
vect_aus = paste(vect_month,vect_year,vect_nhood)
vect_aus2 = paste(vect_year,vect_nhood)
rent_clean$year_nhood = vect_aus2
rent_clean$month_year_nhood = vect_aus
rm(vect_aus,vect_aus2,vect_year,vect_nhood,vect_month)
length(unique(rent_clean$year_nhood))
rent_nhood_yearly = aggregate(rent_clean$`rent.sq`, by = list(rent_clean$year_nhood), FUN = mean)
names(rent_nhood_yearly)[names(rent_nhood_yearly) == 'Group.1'] <- 'year_nhood'
names(rent_nhood_yearly)[names(rent_nhood_yearly) == 'x'] <- 'avg_rent.sq'
length(unique(rent_clean$month_year_nhood))
rent_nhood_monthly = aggregate(rent_clean$`rent.sq`, by = list(rent_clean$month_year_nhood), FUN = mean)
names(rent_nhood_monthly)[names(rent_nhood_monthly) == 'Group.1'] <- 'nhood_month_year'
names(rent_nhood_monthly)[names(rent_nhood_monthly) == 'x'] <- 'avg_rent.sq'
View(rent_nhood_monthly)
for (i in 1:length(rent_nhood_monthly[,1])) {   #preparo bene le coordinate
temp <- strsplit(rent_nhood_monthly[i,1], " ")
for (j in 1:length(temp[[1]])){
rent_nhood_monthly[i,2+j] <- temp[[1]][j]
}
}
rent_nhood_monthly <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_nhood_monthly.csv", header=TRUE)
View(rent_nhood_monthly)
rent_clean <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/rent_clean.csv", header=TRUE)
View(rent_clean)
New_construction_clean_geocoded <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/New_construction_clean_geocoded.csv", header=TRUE)
View(New_construction_clean_geocoded)
Parcels_final <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/Parcels_final.csv", header=TRUE)
View(Parcels_final)
View(Parcels_final)
Square_box <- Parcels_final[,c(6,7)]
View(Square_box)
View(Square_box)
(dy / r_earth) * (180 / pi)
r_earth <- 6378000
#I will first compute the number of new_contructions within 100m from each parcel
dy = 50
dx = 50
(dy / r_earth) * (180 / pi)
for(i in length(square_box[,1])){
square_box[i,3] <- square_box[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
square_box[i,4] <- square_box[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
square_box[i,5] <- square_box[i,2]  + (dx / r_earth) * (180 / pi) / cos(square_box[i,1] * pi/180) #right limit of the box
square_box[i,6] <- square_box[i,2]  - (dx / r_earth) * (180 / pi) / cos(square_box[i,1] * pi/180) #left limit of the box
}
square_box <- Parcels_final[,c(6,7)]
for(i in length(square_box[,1])){
square_box[i,3] <- square_box[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
square_box[i,4] <- square_box[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
square_box[i,5] <- square_box[i,2]  + (dx / r_earth) * (180 / pi) / cos(square_box[i,1] * pi/180) #right limit of the box
square_box[i,6] <- square_box[i,2]  - (dx / r_earth) * (180 / pi) / cos(square_box[i,1] * pi/180) #left limit of the box
}
View(square_box)
for(i in 1:length(square_box[,1])){
square_box[i,3] <- square_box[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
square_box[i,4] <- square_box[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
square_box[i,5] <- square_box[i,2]  + (dx / r_earth) * (180 / pi) / cos(square_box[i,1] * pi/180) #right limit of the box
square_box[i,6] <- square_box[i,2]  - (dx / r_earth) * (180 / pi) / cos(square_box[i,1] * pi/180) #left limit of the box
}
Parcels_final <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/Parcels_final.csv", header=TRUE)
New_construction_clean_geocoded <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/New_construction_clean_geocoded.csv", header=TRUE)
r_earth <- 6378000
#I will first compute the number of new_contructions within 100m from each parcel
dy = 50
dx = 50
square_box <- Parcels_final[,c(6,7)]
View(square_box)
square_box <- add_column(square_box, Empty_Col = NA)
library(dplyr)
library(tibble)
square_box <- add_column(square_box, Empty_Col = NA)
View(Parcels_final)
View(square_box)
library(tibble)
library(dplyr)
Parcels_final <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/Parcels_final.csv", header=TRUE)
New_construction_clean_geocoded <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/New_construction_clean_geocoded.csv", header=TRUE)
r_earth <- 6378000
#I will first compute the number of new_contructions within 100m from each parcel
dy = 50
dx = 50
#To do so, I create a square box with l = 50m and s.t. the center is exactly the parcel
square_box <- Parcels_final[,c(6,7)]
square_box <- add_column(square_box, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
View(square_box)
for(i in 1:length(square_box[,1])){
square_box[i,3] <- square_box[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
square_box[i,4] <- square_box[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
square_box[i,5] <- square_box[i,2]  + (dx / r_earth) * (180 / pi) / cos(square_box[i,1] * pi/180) #right limit of the box
square_box[i,6] <- square_box[i,2]  - (dx / r_earth) * (180 / pi) / cos(square_box[i,1] * pi/180) #left limit of the box
}
#I will compute the number of new_contructions within 100m from each parcel
dy = 50
dx = 50
#To do so, I create a square box with l = 50m and s.t. the center is exactly the parcel
square_box_100 <- Parcels_final[,c(6,7)]
square_box_100 <- add_column(square_box_100, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(square_box_100[,1])){
square_box_100[i,3] <- square_box_100[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
square_box_100[i,4] <- square_box_100[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
square_box_100[i,5] <- square_box_100[i,2]  + (dx / r_earth) * (180 / pi) / cos(square_box_100[i,1] * pi/180) #right limit of the box
square_box_100[i,6] <- square_box_100[i,2]  - (dx / r_earth) * (180 / pi) / cos(square_box_100[i,1] * pi/180) #left limit of the box
}
#I will first compute the number of new_contructions within 500m and at least 100m from each parcel
dy = 250
dx = 250
#To do so, I create a square box with l = 250m and s.t. the center is exactly the parcel
square_box_500 <- Parcels_final[,c(6,7)]
square_box_500 <- add_column(square_box_500, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(square_box_100[,1])){
square_box_500[i,3] <- square_box_500[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
square_box_500[i,4] <- square_box_500[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
square_box_500[i,5] <- square_box_500[i,2]  + (dx / r_earth) * (180 / pi) / cos(square_box_500[i,1] * pi/180) #right limit of the box
square_box_500[i,6] <- square_box_500[i,2]  - (dx / r_earth) * (180 / pi) / cos(square_box_500[i,1] * pi/180) #left limit of the box
}
#I will first compute the number of new_contructions  within 1000m and at least 500m from each parcel
dy = 500
dx = 500
#To do so, I create a square box with l = 250m and s.t. the center is exactly the parcel
square_box_1000 <- Parcels_final[,c(6,7)]
square_box_1000 <- add_column(square_box_500, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(square_box_100[,1])){
square_box_1000[i,3] <- square_box_1000[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
square_box_1000[i,4] <- square_box_1000[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
square_box_1000[i,5] <- square_box_1000[i,2]  + (dx / r_earth) * (180 / pi) / cos(square_box_1000[i,1] * pi/180) #right limit of the box
square_box_1000[i,6] <- square_box_1000[i,2]  - (dx / r_earth) * (180 / pi) / cos(square_box_1000[i,1] * pi/180) #left limit of the box
}
View(square_box)
View(New_construction_clean_geocoded)
View(square_box_100)
View(square_box_1000)
View(square_box_500)
#I will first compute the number of new_contructions  within 2000m and at least 1000m from each parcel
dy = 1000
dx = 1000
#To do so, I create a square box with l = 250m and s.t. the center is exactly the parcel
square_box_2000 <- Parcels_final[,c(6,7)]
square_box_2000 <- add_column(square_box_500, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(square_box_100[,1])){ #computazionalmente lungo
square_box_2000[i,3] <- square_box_2000[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
square_box_2000[i,4] <- square_box_2000[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
square_box_2000[i,5] <- square_box_2000[i,2]  + (dx / r_earth) * (180 / pi) / cos(square_box_2000[i,1] * pi/180) #right limit of the box
square_box_2000[i,6] <- square_box_2000[i,2]  - (dx / r_earth) * (180 / pi) / cos(square_box_2000[i,1] * pi/180) #left limit of the box
}
dy = 100/sqrt(2)
dx = 100/sqrt(2)
inside_square_box_100 <- Parcels_final[,c(6,7)]
inside_square_box_100 <- add_column(inside_square_box_100, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(inside_square_box_[,1])){ #computazionalmente lungo
inside_square_box_[i,3] <- inside_square_box_[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
inside_square_box_[i,4] <- inside_square_box_[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
inside_square_box_[i,5] <- inside_square_box_[i,2]  + (dx / r_earth) * (180 / pi) / cos(inside_square_box_[i,1] * pi/180) #right limit of the box
inside_square_box_[i,6] <- inside_square_box_[i,2]  - (dx / r_earth) * (180 / pi) / cos(inside_square_box_[i,1] * pi/180) #left limit of the box
}
dy = 100/sqrt(2)
dx = 100/sqrt(2)
inside_square_box_100 <- Parcels_final[,c(6,7)]
inside_square_box_100 <- add_column(inside_square_box_100, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(inside_square_box_[,1])){ #computazionalmente lungo
inside_square_box_100[i,3] <- inside_square_box_100[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
inside_square_box_100[i,4] <- inside_square_box_100[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
inside_square_box_100[i,5] <- inside_square_box_100[i,2]  + (dx / r_earth) * (180 / pi) / cos(inside_square_box_100[i,1] * pi/180) #right limit of the box
inside_square_box_100[i,6] <- inside_square_box_100[i,2]  - (dx / r_earth) * (180 / pi) / cos(inside_square_box_100[i,1] * pi/180) #left limit of the box
}
dy = 100/sqrt(2)
dx = 100/sqrt(2)
inside_square_box_100 <- Parcels_final[,c(6,7)]
inside_square_box_100 <- add_column(inside_square_box_100, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(inside_square_box_100[,1])){ #computazionalmente lungo
inside_square_box_100[i,3] <- inside_square_box_100[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
inside_square_box_100[i,4] <- inside_square_box_100[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
inside_square_box_100[i,5] <- inside_square_box_100[i,2]  + (dx / r_earth) * (180 / pi) / cos(inside_square_box_100[i,1] * pi/180) #right limit of the box
inside_square_box_100[i,6] <- inside_square_box_100[i,2]  - (dx / r_earth) * (180 / pi) / cos(inside_square_box_100[i,1] * pi/180) #left limit of the box
}
library(tibble)
library(dplyr)
Parcels_final <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/Parcels_final.csv", header=TRUE)
New_construction_clean_geocoded <- read.csv("C:/Users/Pietro/Desktop/Pietro/Politecnico/Magistrale/Nonparametric_Statistics/Progetto/ricerca di progetti/Progetto Case SF/SF-houses/New_construction_clean_geocoded.csv", header=TRUE)
r_earth <- 6378000
#I will compute the number of new_contructions within 100m from each parcel
#I create a square box with l = 50m and s.t. the center is exactly the parcel: this is the "quadrato circoscritto"
dy = 100
dx = 100
outside_square_box_100 <- Parcels_final[,c(6,7)]
outside_square_box_100 <- add_column(outside_square_box_100, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(outside_square_box_100[,1])){ #computazionalmente lungo
outside_square_box_100[i,3] <- outside_square_box_100[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
outside_square_box_100[i,4] <- outside_square_box_100[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
outside_square_box_100[i,5] <- outside_square_box_100[i,2]  + (dx / r_earth) * (180 / pi) / cos(outside_square_box_100[i,1] * pi/180) #right limit of the box
outside_square_box_100[i,6] <- outside_square_box_100[i,2]  - (dx / r_earth) * (180 / pi) / cos(outside_square_box_100[i,1] * pi/180) #left limit of the box
}
#I create a square box with l = 50m and s.t. the center is exactly the parcel: this is the "quadrato circoscritto"
dy = 100/sqrt(2)
dx = 100/sqrt(2)
inside_square_box_100 <- Parcels_final[,c(6,7)]
inside_square_box_100 <- add_column(inside_square_box_100, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(inside_square_box_100[,1])){ #computazionalmente lungo
inside_square_box_100[i,3] <- inside_square_box_100[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
inside_square_box_100[i,4] <- inside_square_box_100[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
inside_square_box_100[i,5] <- inside_square_box_100[i,2]  + (dx / r_earth) * (180 / pi) / cos(inside_square_box_100[i,1] * pi/180) #right limit of the box
inside_square_box_100[i,6] <- inside_square_box_100[i,2]  - (dx / r_earth) * (180 / pi) / cos(inside_square_box_100[i,1] * pi/180) #left limit of the box
}
#I will first compute the number of new_contructions within 500m and at least 100m from each parcel
dy = 500
dx = 500
#To do so, I create a square box with l = 250m and s.t. the center is exactly the parcel
outside_square_box_500 <- Parcels_final[,c(6,7)]
outside_square_box_500 <- add_column(outside_square_box_500, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(outside_square_box_100[,1])){ #computazionalmente lungo
outside_square_box_500[i,3] <- outside_square_box_500[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
outside_square_box_500[i,4] <- outside_square_box_500[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
outside_square_box_500[i,5] <- outside_square_box_500[i,2]  + (dx / r_earth) * (180 / pi) / cos(outside_square_box_500[i,1] * pi/180) #right limit of the box
outside_square_box_500[i,6] <- outside_square_box_500[i,2]  - (dx / r_earth) * (180 / pi) / cos(outside_square_box_500[i,1] * pi/180) #left limit of the box
}
#I create a square box with l = 500/sqrt(2)m and s.t. the center is exactly the parcel: this is the "quadrato inscritto"
dy = 500/sqrt(2)
dx = 500/sqrt(2)
inside_square_box_500 <- Parcels_final[,c(6,7)]
inside_square_box_500 <- add_column(inside_square_box_500, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(inside_square_box_500[,1])){ #computazionalmente lungo
inside_square_box_500[i,3] <- inside_square_box_500[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
inside_square_box_500[i,4] <- inside_square_box_500[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
inside_square_box_500[i,5] <- inside_square_box_500[i,2]  + (dx / r_earth) * (180 / pi) / cos(inside_square_box_500[i,1] * pi/180) #right limit of the box
inside_square_box_500[i,6] <- inside_square_box_500[i,2]  - (dx / r_earth) * (180 / pi) / cos(inside_square_box_500[i,1] * pi/180) #left limit of the box
}
#I will first compute the number of new_contructions  within 1000m and at least 500m from each parcel
dy = 1000
dx = 1000
#To do so, I create a square box with l = 250m and s.t. the center is exactly the parcel
outside_square_box_1000 <- Parcels_final[,c(6,7)]
outside_square_box_1000 <- add_column(outside_square_box_500, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(outside_square_box_100[,1])){ #computazionalmente lungo
outside_square_box_1000[i,3] <- outside_square_box_1000[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
outside_square_box_1000[i,4] <- outside_square_box_1000[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
outside_square_box_1000[i,5] <- outside_square_box_1000[i,2]  + (dx / r_earth) * (180 / pi) / cos(outside_square_box_1000[i,1] * pi/180) #right limit of the box
outside_square_box_1000[i,6] <- outside_square_box_1000[i,2]  - (dx / r_earth) * (180 / pi) / cos(outside_square_box_1000[i,1] * pi/180) #left limit of the box
}
dy = 1000/sqrt(2)
dx = 1000/sqrt(2)
inside_square_box_1000 <- Parcels_final[,c(6,7)]
inside_square_box_1000 <- add_column(inside_square_box_1000, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(inside_square_box_1000[,1])){ #computazionalmente lungo
inside_square_box_1000[i,3] <- inside_square_box_1000[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
inside_square_box_1000[i,4] <- inside_square_box_1000[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
inside_square_box_1000[i,5] <- inside_square_box_1000[i,2]  + (dx / r_earth) * (180 / pi) / cos(inside_square_box_1000[i,1] * pi/180) #right limit of the box
inside_square_box_1000[i,6] <- inside_square_box_1000[i,2]  - (dx / r_earth) * (180 / pi) / cos(inside_square_box_1000[i,1] * pi/180) #left limit of the box
}
#I will first compute the number of new_contructions  within 2000m and at least 1000m from each parcel
dy = 2000
dx = 2000
#To do so, I create a square box with l = 250m and s.t. the center is exactly the parcel
outside_square_box_2000 <- Parcels_final[,c(6,7)]
outside_square_box_2000 <- add_column(outside_square_box_500, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(outside_square_box_100[,1])){ #computazionalmente lungo
outside_square_box_2000[i,3] <- outside_square_box_2000[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
outside_square_box_2000[i,4] <- outside_square_box_2000[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
outside_square_box_2000[i,5] <- outside_square_box_2000[i,2]  + (dx / r_earth) * (180 / pi) / cos(outside_square_box_2000[i,1] * pi/180) #right limit of the box
outside_square_box_2000[i,6] <- outside_square_box_2000[i,2]  - (dx / r_earth) * (180 / pi) / cos(outside_square_box_2000[i,1] * pi/180) #left limit of the box
}
#I create a square box with l = 2000/sqrt(2)m and s.t. the center is exactly the parcel: this is the "quadrato inscritto"
dy = 2000/sqrt(2)
dx = 2000/sqrt(2)
inside_square_box_2000 <- Parcels_final[,c(6,7)]
inside_square_box_2000 <- add_column(inside_square_box_2000, upper_limit = NA,lower_limit = NA,right_limit = NA,left_limit = NA)
for(i in 1:length(inside_square_box_2000[,1])){ #computazionalmente lungo
inside_square_box_2000[i,3] <- inside_square_box_2000[i,1]  + (dy / r_earth) * (180 / pi) #upper limit of the box
inside_square_box_2000[i,4] <- inside_square_box_2000[i,1]  - (dy / r_earth) * (180 / pi) #lower limit of the box
inside_square_box_2000[i,5] <- inside_square_box_2000[i,2]  + (dx / r_earth) * (180 / pi) / cos(inside_square_box_2000[i,1] * pi/180) #right limit of the box
inside_square_box_2000[i,6] <- inside_square_box_2000[i,2]  - (dx / r_earth) * (180 / pi) / cos(inside_square_box_2000[i,1] * pi/180) #left limit of the box
}
View(outside_square_box_2000)
View(outside_square_box_1000)
View(outside_square_box_500)
